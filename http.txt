HTTP
entendenda a web por debaixo dos panos

Modelo Cliente - Servidor:

           Requisição
----------------------------------->
navegador --> Internet --> Servidor
<-----------------------------------
           Resposta
           Regras de comunicação do protocolo HTTP:
            - Regras de requisição e Respostgerante a.

Modelo Peer to Peer:

Peer pedindo a informação ---> Peer servindo de servidor para ajudar assim a não gerar gargalos

- Não usa http, usa-se P2P: como bittorrente, Gnutella;
- Muito usado para o download de arquivos( principalmente os com altos bytes)

HTTPS:

O protocolo http com uma camada extra de segurança para sites que necessitam, como bancos e sites com contas que exigem senha.

https = http + ssl/tls

Hypertex Transfer Protocol + Secure Socket Layers / Transport Layer Security

Para ser seguro:
 - O site tem que ter uam identidade e um certificado digital. Este certificado garante que a página tem uma chave pública e um privada de criptográfia,
 ou seja ao mandarmos nossos dados eles seram criptografados paenas o servidor com a chave privada correta e que 'bate' com a chave pública podera let nossos dados de forma descriptografada.
 - Quando digo bater, me refiro que ambas fazem parte do mesmo par.
 - Podemos ver se um site é seguro se ela tem um cadeado ao lado da url e está confirmando que este é
 - Se formso na seção de segurança da área do desenvolvedor podemos checar:
    * Validade do certificado;
    * Data de validade do mesmo;
    * Chave pública;
    * Orgão que emitiu o certificado - Autoridade certificadora (CA - Certificate Authority) Elas também possuem datas de validae para renovar e continuarem sendo CA.

Chave Pública --> Certificado --> navegador:
Criptografa os dados

Chave privada --> Servidor:
Descriptografa os dados enviados

Criptográfia Assimétrica:

Chave pública <----> Chave privada

Chave Simétrica:

Chave Navegador <-----> Chave Servidor

Funcionamento da https:

- Certificado cem com a chave pública;
- Servidor comtém cahve privada.

- Usuário interage e gera uma chave simétrica;
- Chave simétrica e enviada usando as chaves assimétricas;
- A partir daqui o servidor usa do metodo simétrico para assegurar a segurnaça e velocidade.

DOMINÍO:

- Nome usado na internet para que o usuário não necessite ficar decoranto o IP do servidor de cada site;
- DNS(Domain Name System) - Sistema que atua como tradutor para mudar o nome do domínio para o endereço de IP corespondente.

Porta padrão:
    - http = 80;
    - https = 443;
    - ftp = 21;
    - ssh = 22.

ENDEREÇOS:

- Url são endereços da web;
- Uma url começa com o protocolo, seguido pelo domínio;
- Após o somínio é espicificado o caminho para um recurso;
- um recurso é algo concreto que queremos acessar.

---------------------------------------------------------------------------------------------------

* Protocolo SMB(Server Message Block) é usado para compartilhar arquivos dentro de uma rede local.

---------------------------------------------------------------------------------------------------

URI = Uniform Resource Identifier;
URL = Uniform Resource Locator;
URN = Uniform Resource Name

Resposta fácil:
    - uri e url são sinônimos no dia a dia do desenvolvimento web;
    - E a urn é apenas mais uma sintaxe para se escrever os endereços web porem pouco usada.
Resposta dificil:
    - url e urn são formas de uri;
    - Equanto a url te da o endereço, protocolo e recursos. A urn te define o recurso porém não define endereço e protocolo.


http (Request-Response):

- O protocolo http segue o modelo requisição-resposta;
- Uma requisição precisa ter todas as informações para o srvirdor gerar a resposta;
- http é Stateless!(não mantém informações entre requisições);
- As plataformas de desenvolvimento usam sessões para guardar informações entre requisições.